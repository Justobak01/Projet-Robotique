clc
clear
close all

%initialise transformation matrices
names = {'T_01' 'T_12' 'T_23' 'T_34' 'T_4e'};
for index = 1 : length(names)
    s.(names{index}) = eye(4);  % Assign index to s.T_01, s.T_12, s.T_23 etc.
end

%link lengths (mm) - FIXED
L1 = 63;
L2 = 153;
L3 = 153;
L4 = 98;
lEff = 30;

%initialising DH matrix 
DH_matrix = zeros(5,4);
DH_matrix(1,2) = (pi/180)*90;
DH_matrix(1,3) = L1;
DH_matrix(2,1) = L2;
DH_matrix(3,1) = L3;
DH_matrix(4,2) = (pi/180)*90;
%DH_matrix(5,3) = l5 - lEff;
DH_matrix(5,3) = L4;

counter = 0;
step = 20;

 for q1 = -80:step:90 % Note: range of motion from Arm No.6
     for q2 = 0:step:180
         for q3 = -170:step:0
             for q4 = 0:step:180
                 for q5 = -90:step:90
                   
                    if (q2+q3+q4) > -90 % NEW 
                    %if (q3+q4) > -100 % NEW
                    
                        for i = 1:5 %change q variables to a structure variable
                           DH_matrix(1,4) = (pi/180)*q1;
                           DH_matrix(2,4) = (pi/180)*q2; 
                           DH_matrix(3,4) = (pi/180)*q3; 
                           DH_matrix(4,4) = (pi/180)*q4; 
                           DH_matrix(5,4) = (pi/180)*q5; 
                        end

                        for j = 1:5
                           s.(names{j})(1,1) = cos(DH_matrix(j,4)); 
                           s.(names{j})(1,2) = -cos(DH_matrix(j,2)) * sin(DH_matrix(j,4)); 
                           s.(names{j})(1,3) = sin(DH_matrix(j,2)) * sin(DH_matrix(j,4)); 
                           s.(names{j})(1,4) = DH_matrix(j,1) * cos(DH_matrix(j,4)); 
                           s.(names{j})(2,1) = sin(DH_matrix(j,4)); 
                           s.(names{j})(2,2) = cos(DH_matrix(j,2)) * cos(DH_matrix(j,4)); 
                           s.(names{j})(2,3) = -sin(DH_matrix(j,2)) * cos(DH_matrix(j,4)); 
                           s.(names{j})(2,4) = DH_matrix(j,1) * sin(DH_matrix(j,4)); 
                           s.(names{j})(3,2) = sin(DH_matrix(j,2)); 
                           s.(names{j})(3,3) = cos(DH_matrix(j,2)); 
                           s.(names{j})(3,4) = DH_matrix(j,3);  
                        end

                        T = s.T_01 * s.T_12 * s.T_23 * s.T_34 * s.T_4e;

                        T01 = s.T_01; % NEW
                        T02 = s.T_01 * s.T_12; % NEW
                        T03 = s.T_01 * s.T_12 * s.T_23; % NEW
                        T04 = s.T_01 * s.T_12 * s.T_23 * s.T_34; % This is to check the wrist location

                        if ~((T(1,4) < 0) && (T04(1,4) > 0)) %&& (T(1,4) < 0) % NEW
                        
                            counter = counter + 1;

                            posX(counter,:) = [0,T01(1,4),T02(1,4),T03(1,4),T04(1,4),T(1,4)]; % NEW
                            posY(counter,:) = [0,T01(2,4),T02(2,4),T03(2,4),T04(2,4),T(2,4)]; % NEW
                            posZ(counter,:) = [0,T01(3,4),T02(3,4),T03(3,4),T04(3,4),T(3,4)]; % NEW

                            %if T(1,4) > 0 % NEW
                                X_pos(counter) = T(1,4);
                                Y_pos(counter) = T(2,4);
                                Z_pos(counter) = T(3,4);
                        end % NEW
                        
                    end % NEW
                    
                 end
             end
         end
     end
 end
 
x_origin = [0,0,L2,L2+L3,L2+L3];
y_origin = [0,0,0,0,0]; 
z_origin = [0,L1,L1,L1,L1-L4]; 
 
figure(1)
plot(X_pos,Z_pos,'.');
xlabel('x (mm)') ; ylabel('z (mm)') ; 

figure(2)
scatter3(X_pos,Y_pos,Z_pos,'.');
xlabel('x (mm)') ; ylabel('y (mm)') ; zlabel('z (mm)') ; 
axis([-500 500 -500 500 -500 500])
hold on
plot3(x_origin,y_origin,z_origin,'ko-','Linewidth',2)
% for i=1:counter
%     hold on
%     plot3(posX(i,:),posY(i,:),posZ(i,:),'ko-','Linewidth',2)
% end
